Grammar

    0 $accept: stmts $end

    1 stmts: stmt
    2      | stmt NEWLINE
    3      | stmt NEWLINE stmts

    4 stmt: SELECT LT cond GT LP ID RP
    5     | PROJECT LT attr_list GT LP ID RP
    6     | LP ID RP CARTESIAN_PRODUCT LP ID RP
    7     | LP ID RP EQUI_JOIN LT mul_cond GT LP ID RP

    8 cond: or_expr
    9     | or_expr AND cond

   10 or_expr: expr
   11        | expr OR or_expr

   12 expr: attr LE attr
   13     | attr LE INT
   14     | attr GE attr
   15     | attr GE INT
   16     | attr EQ attr
   17     | attr EQ INT
   18     | attr EQ QUOTE ID QUOTE
   19     | attr NEQ attr
   20     | attr NEQ INT
   21     | attr NEQ QUOTE ID QUOTE
   22     | attr LT attr
   23     | attr LT INT
   24     | attr GT attr
   25     | attr GT INT
   26     | NOT expr

   27 attr_list: attr
   28          | attr COMMA attr_list

   29 attr: ID

   30 mul_cond: mul_or_expr
   31         | mul_or_expr AND mul_cond

   32 mul_or_expr: mul_expr
   33            | mul_expr OR mul_or_expr

   34 mul_expr: mul_attr EQ mul_attr

   35 mul_attr: ID DOT ID


Terminals, with rules where they appear

$end (0) 0
error (256)
SELECT (258) 4
PROJECT (259) 5
CARTESIAN_PRODUCT (260) 6
EQUI_JOIN (261) 7
LE (262) 12 13
GE (263) 14 15
EQ (264) 16 17 18 34
NEQ (265) 19 20 21
LT (266) 4 5 7 22 23
GT (267) 4 5 7 24 25
AND (268) 9 31
OR (269) 11 33
NOT (270) 26
COMMA (271) 28
DOT (272) 35
LP (273) 4 5 6 7
RP (274) 4 5 6 7
ID (275) 4 5 6 7 18 21 29 35
INT (276) 13 15 17 20 23 25
QUOTE (277) 18 21
NEWLINE (278) 2 3


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
stmts (25)
    on left: 1 2 3, on right: 0 3
stmt (26)
    on left: 4 5 6 7, on right: 1 2 3
cond (27)
    on left: 8 9, on right: 4 9
or_expr (28)
    on left: 10 11, on right: 8 9 11
expr (29)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26, on right:
    10 11 26
attr_list (30)
    on left: 27 28, on right: 5 28
attr (31)
    on left: 29, on right: 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    27 28
mul_cond (32)
    on left: 30 31, on right: 7 31
mul_or_expr (33)
    on left: 32 33, on right: 30 31 33
mul_expr (34)
    on left: 34, on right: 32 33
mul_attr (35)
    on left: 35, on right: 34


State 0

    0 $accept: . stmts $end

    SELECT   shift, and go to state 1
    PROJECT  shift, and go to state 2
    LP       shift, and go to state 3

    stmts  go to state 4
    stmt   go to state 5


State 1

    4 stmt: SELECT . LT cond GT LP ID RP

    LT  shift, and go to state 6


State 2

    5 stmt: PROJECT . LT attr_list GT LP ID RP

    LT  shift, and go to state 7


State 3

    6 stmt: LP . ID RP CARTESIAN_PRODUCT LP ID RP
    7     | LP . ID RP EQUI_JOIN LT mul_cond GT LP ID RP

    ID  shift, and go to state 8


State 4

    0 $accept: stmts . $end

    $end  shift, and go to state 9


State 5

    1 stmts: stmt .
    2      | stmt . NEWLINE
    3      | stmt . NEWLINE stmts

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 1 (stmts)


State 6

    4 stmt: SELECT LT . cond GT LP ID RP

    NOT  shift, and go to state 11
    ID   shift, and go to state 12

    cond     go to state 13
    or_expr  go to state 14
    expr     go to state 15
    attr     go to state 16


State 7

    5 stmt: PROJECT LT . attr_list GT LP ID RP

    ID  shift, and go to state 12

    attr_list  go to state 17
    attr       go to state 18


State 8

    6 stmt: LP ID . RP CARTESIAN_PRODUCT LP ID RP
    7     | LP ID . RP EQUI_JOIN LT mul_cond GT LP ID RP

    RP  shift, and go to state 19


State 9

    0 $accept: stmts $end .

    $default  accept


State 10

    2 stmts: stmt NEWLINE .
    3      | stmt NEWLINE . stmts

    SELECT   shift, and go to state 1
    PROJECT  shift, and go to state 2
    LP       shift, and go to state 3

    $default  reduce using rule 2 (stmts)

    stmts  go to state 20
    stmt   go to state 5


State 11

   26 expr: NOT . expr

    NOT  shift, and go to state 11
    ID   shift, and go to state 12

    expr  go to state 21
    attr  go to state 16


State 12

   29 attr: ID .

    $default  reduce using rule 29 (attr)


State 13

    4 stmt: SELECT LT cond . GT LP ID RP

    GT  shift, and go to state 22


State 14

    8 cond: or_expr .
    9     | or_expr . AND cond

    AND  shift, and go to state 23

    $default  reduce using rule 8 (cond)


State 15

   10 or_expr: expr .
   11        | expr . OR or_expr

    OR  shift, and go to state 24

    $default  reduce using rule 10 (or_expr)


State 16

   12 expr: attr . LE attr
   13     | attr . LE INT
   14     | attr . GE attr
   15     | attr . GE INT
   16     | attr . EQ attr
   17     | attr . EQ INT
   18     | attr . EQ QUOTE ID QUOTE
   19     | attr . NEQ attr
   20     | attr . NEQ INT
   21     | attr . NEQ QUOTE ID QUOTE
   22     | attr . LT attr
   23     | attr . LT INT
   24     | attr . GT attr
   25     | attr . GT INT

    LE   shift, and go to state 25
    GE   shift, and go to state 26
    EQ   shift, and go to state 27
    NEQ  shift, and go to state 28
    LT   shift, and go to state 29
    GT   shift, and go to state 30


State 17

    5 stmt: PROJECT LT attr_list . GT LP ID RP

    GT  shift, and go to state 31


State 18

   27 attr_list: attr .
   28          | attr . COMMA attr_list

    COMMA  shift, and go to state 32

    $default  reduce using rule 27 (attr_list)


State 19

    6 stmt: LP ID RP . CARTESIAN_PRODUCT LP ID RP
    7     | LP ID RP . EQUI_JOIN LT mul_cond GT LP ID RP

    CARTESIAN_PRODUCT  shift, and go to state 33
    EQUI_JOIN          shift, and go to state 34


State 20

    3 stmts: stmt NEWLINE stmts .

    $default  reduce using rule 3 (stmts)


State 21

   26 expr: NOT expr .

    $default  reduce using rule 26 (expr)


State 22

    4 stmt: SELECT LT cond GT . LP ID RP

    LP  shift, and go to state 35


State 23

    9 cond: or_expr AND . cond

    NOT  shift, and go to state 11
    ID   shift, and go to state 12

    cond     go to state 36
    or_expr  go to state 14
    expr     go to state 15
    attr     go to state 16


State 24

   11 or_expr: expr OR . or_expr

    NOT  shift, and go to state 11
    ID   shift, and go to state 12

    or_expr  go to state 37
    expr     go to state 15
    attr     go to state 16


State 25

   12 expr: attr LE . attr
   13     | attr LE . INT

    ID   shift, and go to state 12
    INT  shift, and go to state 38

    attr  go to state 39


State 26

   14 expr: attr GE . attr
   15     | attr GE . INT

    ID   shift, and go to state 12
    INT  shift, and go to state 40

    attr  go to state 41


State 27

   16 expr: attr EQ . attr
   17     | attr EQ . INT
   18     | attr EQ . QUOTE ID QUOTE

    ID     shift, and go to state 12
    INT    shift, and go to state 42
    QUOTE  shift, and go to state 43

    attr  go to state 44


State 28

   19 expr: attr NEQ . attr
   20     | attr NEQ . INT
   21     | attr NEQ . QUOTE ID QUOTE

    ID     shift, and go to state 12
    INT    shift, and go to state 45
    QUOTE  shift, and go to state 46

    attr  go to state 47


State 29

   22 expr: attr LT . attr
   23     | attr LT . INT

    ID   shift, and go to state 12
    INT  shift, and go to state 48

    attr  go to state 49


State 30

   24 expr: attr GT . attr
   25     | attr GT . INT

    ID   shift, and go to state 12
    INT  shift, and go to state 50

    attr  go to state 51


State 31

    5 stmt: PROJECT LT attr_list GT . LP ID RP

    LP  shift, and go to state 52


State 32

   28 attr_list: attr COMMA . attr_list

    ID  shift, and go to state 12

    attr_list  go to state 53
    attr       go to state 18


State 33

    6 stmt: LP ID RP CARTESIAN_PRODUCT . LP ID RP

    LP  shift, and go to state 54


State 34

    7 stmt: LP ID RP EQUI_JOIN . LT mul_cond GT LP ID RP

    LT  shift, and go to state 55


State 35

    4 stmt: SELECT LT cond GT LP . ID RP

    ID  shift, and go to state 56


State 36

    9 cond: or_expr AND cond .

    $default  reduce using rule 9 (cond)


State 37

   11 or_expr: expr OR or_expr .

    $default  reduce using rule 11 (or_expr)


State 38

   13 expr: attr LE INT .

    $default  reduce using rule 13 (expr)


State 39

   12 expr: attr LE attr .

    $default  reduce using rule 12 (expr)


State 40

   15 expr: attr GE INT .

    $default  reduce using rule 15 (expr)


State 41

   14 expr: attr GE attr .

    $default  reduce using rule 14 (expr)


State 42

   17 expr: attr EQ INT .

    $default  reduce using rule 17 (expr)


State 43

   18 expr: attr EQ QUOTE . ID QUOTE

    ID  shift, and go to state 57


State 44

   16 expr: attr EQ attr .

    $default  reduce using rule 16 (expr)


State 45

   20 expr: attr NEQ INT .

    $default  reduce using rule 20 (expr)


State 46

   21 expr: attr NEQ QUOTE . ID QUOTE

    ID  shift, and go to state 58


State 47

   19 expr: attr NEQ attr .

    $default  reduce using rule 19 (expr)


State 48

   23 expr: attr LT INT .

    $default  reduce using rule 23 (expr)


State 49

   22 expr: attr LT attr .

    $default  reduce using rule 22 (expr)


State 50

   25 expr: attr GT INT .

    $default  reduce using rule 25 (expr)


State 51

   24 expr: attr GT attr .

    $default  reduce using rule 24 (expr)


State 52

    5 stmt: PROJECT LT attr_list GT LP . ID RP

    ID  shift, and go to state 59


State 53

   28 attr_list: attr COMMA attr_list .

    $default  reduce using rule 28 (attr_list)


State 54

    6 stmt: LP ID RP CARTESIAN_PRODUCT LP . ID RP

    ID  shift, and go to state 60


State 55

    7 stmt: LP ID RP EQUI_JOIN LT . mul_cond GT LP ID RP

    ID  shift, and go to state 61

    mul_cond     go to state 62
    mul_or_expr  go to state 63
    mul_expr     go to state 64
    mul_attr     go to state 65


State 56

    4 stmt: SELECT LT cond GT LP ID . RP

    RP  shift, and go to state 66


State 57

   18 expr: attr EQ QUOTE ID . QUOTE

    QUOTE  shift, and go to state 67


State 58

   21 expr: attr NEQ QUOTE ID . QUOTE

    QUOTE  shift, and go to state 68


State 59

    5 stmt: PROJECT LT attr_list GT LP ID . RP

    RP  shift, and go to state 69


State 60

    6 stmt: LP ID RP CARTESIAN_PRODUCT LP ID . RP

    RP  shift, and go to state 70


State 61

   35 mul_attr: ID . DOT ID

    DOT  shift, and go to state 71


State 62

    7 stmt: LP ID RP EQUI_JOIN LT mul_cond . GT LP ID RP

    GT  shift, and go to state 72


State 63

   30 mul_cond: mul_or_expr .
   31         | mul_or_expr . AND mul_cond

    AND  shift, and go to state 73

    $default  reduce using rule 30 (mul_cond)


State 64

   32 mul_or_expr: mul_expr .
   33            | mul_expr . OR mul_or_expr

    OR  shift, and go to state 74

    $default  reduce using rule 32 (mul_or_expr)


State 65

   34 mul_expr: mul_attr . EQ mul_attr

    EQ  shift, and go to state 75


State 66

    4 stmt: SELECT LT cond GT LP ID RP .

    $default  reduce using rule 4 (stmt)


State 67

   18 expr: attr EQ QUOTE ID QUOTE .

    $default  reduce using rule 18 (expr)


State 68

   21 expr: attr NEQ QUOTE ID QUOTE .

    $default  reduce using rule 21 (expr)


State 69

    5 stmt: PROJECT LT attr_list GT LP ID RP .

    $default  reduce using rule 5 (stmt)


State 70

    6 stmt: LP ID RP CARTESIAN_PRODUCT LP ID RP .

    $default  reduce using rule 6 (stmt)


State 71

   35 mul_attr: ID DOT . ID

    ID  shift, and go to state 76


State 72

    7 stmt: LP ID RP EQUI_JOIN LT mul_cond GT . LP ID RP

    LP  shift, and go to state 77


State 73

   31 mul_cond: mul_or_expr AND . mul_cond

    ID  shift, and go to state 61

    mul_cond     go to state 78
    mul_or_expr  go to state 63
    mul_expr     go to state 64
    mul_attr     go to state 65


State 74

   33 mul_or_expr: mul_expr OR . mul_or_expr

    ID  shift, and go to state 61

    mul_or_expr  go to state 79
    mul_expr     go to state 64
    mul_attr     go to state 65


State 75

   34 mul_expr: mul_attr EQ . mul_attr

    ID  shift, and go to state 61

    mul_attr  go to state 80


State 76

   35 mul_attr: ID DOT ID .

    $default  reduce using rule 35 (mul_attr)


State 77

    7 stmt: LP ID RP EQUI_JOIN LT mul_cond GT LP . ID RP

    ID  shift, and go to state 81


State 78

   31 mul_cond: mul_or_expr AND mul_cond .

    $default  reduce using rule 31 (mul_cond)


State 79

   33 mul_or_expr: mul_expr OR mul_or_expr .

    $default  reduce using rule 33 (mul_or_expr)


State 80

   34 mul_expr: mul_attr EQ mul_attr .

    $default  reduce using rule 34 (mul_expr)


State 81

    7 stmt: LP ID RP EQUI_JOIN LT mul_cond GT LP ID . RP

    RP  shift, and go to state 82


State 82

    7 stmt: LP ID RP EQUI_JOIN LT mul_cond GT LP ID RP .

    $default  reduce using rule 7 (stmt)
