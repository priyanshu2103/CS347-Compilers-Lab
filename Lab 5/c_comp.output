Terminals unused in grammar

   IF
   ELSE


State 5 conflicts: 10 reduce/reduce
State 21 conflicts: 4 reduce/reduce
State 29 conflicts: 10 reduce/reduce
State 40 conflicts: 1 shift/reduce
State 72 conflicts: 2 reduce/reduce
State 77 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 88 conflicts: 4 shift/reduce
State 90 conflicts: 4 shift/reduce
State 91 conflicts: 4 shift/reduce
State 92 conflicts: 4 shift/reduce
State 95 conflicts: 4 shift/reduce
State 97 conflicts: 4 shift/reduce
State 98 conflicts: 4 shift/reduce
State 99 conflicts: 4 shift/reduce
State 142 conflicts: 2 reduce/reduce
State 143 conflicts: 2 reduce/reduce
State 159 conflicts: 3 reduce/reduce
State 234 conflicts: 7 reduce/reduce
State 235 conflicts: 7 reduce/reduce


Grammar

    0 $accept: stmts $end

    1 stmts: stmt
    2      | stmt stmts

    3 stmt: stmt_wo_func
    4     | stmt_with_func

    5 stmt_wo_func: var_decl
    6             | arith
    7             | func_call SEMI
    8             | switch_case
    9             | for_loop
   10             | while_loop

   11 stmt_with_func: func_decl
   12               | func_def

   13 var_decl: INT_DECL int_id_list
   14         | FLOAT_DECL float_id_list

   15 int_id_list: int_assign SEMI
   16            | int_assign COMMA int_id_list

   17 int_assign: ID
   18           | ID EQ int_id_assign_list

   19 int_id_assign_list: ID
   20                   | ID EQ INT
   21                   | ID EQ int_arith
   22                   | ID EQ func_call
   23                   | ID EQ int_id_assign_list

   24 float_id_list: float_assign SEMI
   25              | float_assign COMMA float_id_list

   26 float_assign: ID
   27             | ID EQ float_id_assign_list

   28 float_id_assign_list: ID
   29                     | ID EQ FLOAT
   30                     | ID EQ float_arith
   31                     | ID EQ func_call
   32                     | ID EQ float_id_assign_list

   33 arith: int_arith SEMI
   34      | float_arith SEMI

   35 int_arith: int_arith_arg PLUS int_arith_arg
   36          | int_arith_arg MINUS int_arith_arg
   37          | int_arith_arg MULT int_arith_arg
   38          | int_arith_arg DIV int_arith_arg

   39 int_arith_arg: ID
   40              | INT
   41              | int_arith
   42              | func_call
   43              | LP int_arith RP

   44 float_arith: float_arith_arg PLUS float_arith_arg
   45            | float_arith_arg MINUS float_arith_arg
   46            | float_arith_arg MULT float_arith_arg
   47            | float_arith_arg DIV float_arith_arg

   48 float_arith_arg: ID
   49                | FLOAT
   50                | float_arith
   51                | func_call
   52                | LP float_arith RP

   53 func_call: ID LP call_arg_list RP

   54 call_arg_list: ID
   55              | ID COMMA call_arg_list

   56 func_decl: VOID ID LP decl_arg_list RP SEMI
   57          | INT_DECL ID LP decl_arg_list RP SEMI
   58          | FLOAT_DECL ID LP decl_arg_list RP SEMI

   59 decl_arg_list: decl_arg
   60              | decl_arg COMMA decl_arg_list

   61 decl_arg: INT_DECL
   62         | FLOAT_DECL
   63         | INT_DECL ID
   64         | FLOAT_DECL ID

   65 func_def: VOID ID LP def_arg_list RP stmt_wo_func
   66         | VOID ID LP def_arg_list RP LC body RC
   67         | INT_DECL ID LP def_arg_list RP stmt_wo_func
   68         | INT_DECL ID LP def_arg_list RP LC body RC
   69         | FLOAT_DECL ID LP def_arg_list RP stmt_wo_func
   70         | FLOAT_DECL ID LP def_arg_list RP LC body RC

   71 def_arg_list: def_arg
   72             | def_arg COMMA def_arg_list

   73 def_arg: INT_DECL ID
   74        | FLOAT_DECL ID

   75 body: stmt_wo_func
   76     | stmt_wo_func body

   77 cond: and_expr
   78     | and_expr OR cond

   79 and_expr: expr
   80         | expr AND and_expr

   81 expr: int_arith_arg LT int_arith_arg
   82     | int_arith_arg GT int_arith_arg
   83     | int_arith_arg LE int_arith_arg
   84     | int_arith_arg GE int_arith_arg
   85     | int_arith_arg EQ EQ int_arith_arg
   86     | int_arith_arg NEQ int_arith_arg
   87     | float_arith_arg LT float_arith_arg
   88     | float_arith_arg GT float_arith_arg
   89     | float_arith_arg LE float_arith_arg
   90     | float_arith_arg GE float_arith_arg
   91     | float_arith_arg EQ EQ float_arith_arg
   92     | float_arith_arg NEQ float_arith_arg
   93     | EXCL cond

   94 switch_case: SWITCH ID COL LC cases RC
   95            | SWITCH LP ID RP LC cases RC

   96 cases: case default
   97      | case cases

   98 case: CASE INT COL body break
   99     | CASE INT COL LC body RC break
  100     | CASE LP INT RP COL body break
  101     | CASE LP INT RP COL LC body RC break
  102     | CASE FLOAT COL body break
  103     | CASE FLOAT COL LC body RC break
  104     | CASE LP FLOAT RP COL body break
  105     | CASE LP FLOAT RP COL LC body RC break

  106 default: %empty
  107        | DEFAULT COL body break
  108        | DEFAULT COL LC body RC break

  109 break: %empty
  110      | BREAK SEMI

  111 for_loop: FOR LP for_expr RP stmt_wo_func
  112         | FOR LP for_expr RP LC body RC

  113 for_expr: for_first for_second for_third

  114 for_first: %empty
  115          | var_decl
  116          | int_id_list
  117          | float_id_list

  118 for_second: %empty
  119           | cond SEMI

  120 for_third: %empty
  121          | ID EQ int_id_assign_list
  122          | ID EQ float_id_assign_list

  123 while_loop: WHILE LP cond RP stmt_wo_func
  124           | WHILE LP cond RP LC body RC


Terminals, with rules where they appear

$end (0) 0
error (256)
PLUS (258) 35 44
MINUS (259) 36 45
MULT (260) 37 46
DIV (261) 38 47
LE (262) 83 89
GE (263) 84 90
EQ (264) 18 20 21 22 23 27 29 30 31 32 85 91 121 122
NEQ (265) 86 92
LT (266) 81 87
GT (267) 82 88
AND (268) 80
OR (269) 78
EXCL (270) 93
COMMA (271) 16 25 55 60 72
COL (272) 94 98 99 100 101 102 103 104 105 107 108
SEMI (273) 7 15 24 33 34 56 57 58 110 119
LC (274) 66 68 70 94 95 99 101 103 105 108 112 124
RC (275) 66 68 70 94 95 99 101 103 105 108 112 124
LP (276) 43 52 53 56 57 58 65 66 67 68 69 70 95 100 101 104 105 111
    112 123 124
RP (277) 43 52 53 56 57 58 65 66 67 68 69 70 95 100 101 104 105 111
    112 123 124
VOID (278) 56 65 66
INT_DECL (279) 13 57 61 63 67 68 73
FLOAT_DECL (280) 14 58 62 64 69 70 74
ID (281) 17 18 19 20 21 22 23 26 27 28 29 30 31 32 39 48 53 54 55 56
    57 58 63 64 65 66 67 68 69 70 73 74 94 95 121 122
INT (282) 20 40 98 99 100 101
FLOAT (283) 29 49 102 103 104 105
IF (284)
ELSE (285)
SWITCH (286) 94 95
CASE (287) 98 99 100 101 102 103 104 105
FOR (288) 111 112
WHILE (289) 123 124
BREAK (290) 110
DEFAULT (291) 107 108


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
stmts (38)
    on left: 1 2, on right: 0 2
stmt (39)
    on left: 3 4, on right: 1 2
stmt_wo_func (40)
    on left: 5 6 7 8 9 10, on right: 3 65 67 69 75 76 111 123
stmt_with_func (41)
    on left: 11 12, on right: 4
var_decl (42)
    on left: 13 14, on right: 5 115
int_id_list (43)
    on left: 15 16, on right: 13 16 116
int_assign (44)
    on left: 17 18, on right: 15 16
int_id_assign_list (45)
    on left: 19 20 21 22 23, on right: 18 23 121
float_id_list (46)
    on left: 24 25, on right: 14 25 117
float_assign (47)
    on left: 26 27, on right: 24 25
float_id_assign_list (48)
    on left: 28 29 30 31 32, on right: 27 32 122
arith (49)
    on left: 33 34, on right: 6
int_arith (50)
    on left: 35 36 37 38, on right: 21 33 41 43
int_arith_arg (51)
    on left: 39 40 41 42 43, on right: 35 36 37 38 81 82 83 84 85 86
float_arith (52)
    on left: 44 45 46 47, on right: 30 34 50 52
float_arith_arg (53)
    on left: 48 49 50 51 52, on right: 44 45 46 47 87 88 89 90 91 92
func_call (54)
    on left: 53, on right: 7 22 31 42 51
call_arg_list (55)
    on left: 54 55, on right: 53 55
func_decl (56)
    on left: 56 57 58, on right: 11
decl_arg_list (57)
    on left: 59 60, on right: 56 57 58 60
decl_arg (58)
    on left: 61 62 63 64, on right: 59 60
func_def (59)
    on left: 65 66 67 68 69 70, on right: 12
def_arg_list (60)
    on left: 71 72, on right: 65 66 67 68 69 70 72
def_arg (61)
    on left: 73 74, on right: 71 72
body (62)
    on left: 75 76, on right: 66 68 70 76 98 99 100 101 102 103 104
    105 107 108 112 124
cond (63)
    on left: 77 78, on right: 78 93 119 123 124
and_expr (64)
    on left: 79 80, on right: 77 78 80
expr (65)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93, on right: 79 80
switch_case (66)
    on left: 94 95, on right: 8
cases (67)
    on left: 96 97, on right: 94 95 97
case (68)
    on left: 98 99 100 101 102 103 104 105, on right: 96 97
default (69)
    on left: 106 107 108, on right: 96
break (70)
    on left: 109 110, on right: 98 99 100 101 102 103 104 105 107 108
for_loop (71)
    on left: 111 112, on right: 9
for_expr (72)
    on left: 113, on right: 111 112
for_first (73)
    on left: 114 115 116 117, on right: 113
for_second (74)
    on left: 118 119, on right: 113
for_third (75)
    on left: 120 121 122, on right: 113
while_loop (76)
    on left: 123 124, on right: 10


State 0

    0 $accept: . stmts $end

    LP          shift, and go to state 1
    VOID        shift, and go to state 2
    INT_DECL    shift, and go to state 3
    FLOAT_DECL  shift, and go to state 4
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmts            go to state 11
    stmt             go to state 12
    stmt_wo_func     go to state 13
    stmt_with_func   go to state 14
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    func_decl        go to state 22
    func_def         go to state 23
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 1

   43 int_arith_arg: LP . int_arith RP
   52 float_arith_arg: LP . float_arith RP

    LP     shift, and go to state 1
    ID     shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    int_arith        go to state 27
    int_arith_arg    go to state 18
    float_arith      go to state 28
    float_arith_arg  go to state 20
    func_call        go to state 29


State 2

   56 func_decl: VOID . ID LP decl_arg_list RP SEMI
   65 func_def: VOID . ID LP def_arg_list RP stmt_wo_func
   66         | VOID . ID LP def_arg_list RP LC body RC

    ID  shift, and go to state 30


State 3

   13 var_decl: INT_DECL . int_id_list
   57 func_decl: INT_DECL . ID LP decl_arg_list RP SEMI
   67 func_def: INT_DECL . ID LP def_arg_list RP stmt_wo_func
   68         | INT_DECL . ID LP def_arg_list RP LC body RC

    ID  shift, and go to state 31

    int_id_list  go to state 32
    int_assign   go to state 33


State 4

   14 var_decl: FLOAT_DECL . float_id_list
   58 func_decl: FLOAT_DECL . ID LP decl_arg_list RP SEMI
   69 func_def: FLOAT_DECL . ID LP def_arg_list RP stmt_wo_func
   70         | FLOAT_DECL . ID LP def_arg_list RP LC body RC

    ID  shift, and go to state 34

    float_id_list  go to state 35
    float_assign   go to state 36


State 5

   39 int_arith_arg: ID .
   48 float_arith_arg: ID .
   53 func_call: ID . LP call_arg_list RP

    LP  shift, and go to state 37

    PLUS      reduce using rule 39 (int_arith_arg)
    PLUS      [reduce using rule 48 (float_arith_arg)]
    MINUS     reduce using rule 39 (int_arith_arg)
    MINUS     [reduce using rule 48 (float_arith_arg)]
    MULT      reduce using rule 39 (int_arith_arg)
    MULT      [reduce using rule 48 (float_arith_arg)]
    DIV       reduce using rule 39 (int_arith_arg)
    DIV       [reduce using rule 48 (float_arith_arg)]
    LE        reduce using rule 39 (int_arith_arg)
    LE        [reduce using rule 48 (float_arith_arg)]
    GE        reduce using rule 39 (int_arith_arg)
    GE        [reduce using rule 48 (float_arith_arg)]
    EQ        reduce using rule 39 (int_arith_arg)
    EQ        [reduce using rule 48 (float_arith_arg)]
    NEQ       reduce using rule 39 (int_arith_arg)
    NEQ       [reduce using rule 48 (float_arith_arg)]
    LT        reduce using rule 39 (int_arith_arg)
    LT        [reduce using rule 48 (float_arith_arg)]
    GT        reduce using rule 39 (int_arith_arg)
    GT        [reduce using rule 48 (float_arith_arg)]
    $default  reduce using rule 39 (int_arith_arg)


State 6

   40 int_arith_arg: INT .

    $default  reduce using rule 40 (int_arith_arg)


State 7

   49 float_arith_arg: FLOAT .

    $default  reduce using rule 49 (float_arith_arg)


State 8

   94 switch_case: SWITCH . ID COL LC cases RC
   95            | SWITCH . LP ID RP LC cases RC

    LP  shift, and go to state 38
    ID  shift, and go to state 39


State 9

  111 for_loop: FOR . LP for_expr RP stmt_wo_func
  112         | FOR . LP for_expr RP LC body RC

    LP  shift, and go to state 40


State 10

  123 while_loop: WHILE . LP cond RP stmt_wo_func
  124           | WHILE . LP cond RP LC body RC

    LP  shift, and go to state 41


State 11

    0 $accept: stmts . $end

    $end  shift, and go to state 42


State 12

    1 stmts: stmt .
    2      | stmt . stmts

    LP          shift, and go to state 1
    VOID        shift, and go to state 2
    INT_DECL    shift, and go to state 3
    FLOAT_DECL  shift, and go to state 4
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    $default  reduce using rule 1 (stmts)

    stmts            go to state 43
    stmt             go to state 12
    stmt_wo_func     go to state 13
    stmt_with_func   go to state 14
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    func_decl        go to state 22
    func_def         go to state 23
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 13

    3 stmt: stmt_wo_func .

    $default  reduce using rule 3 (stmt)


State 14

    4 stmt: stmt_with_func .

    $default  reduce using rule 4 (stmt)


State 15

    5 stmt_wo_func: var_decl .

    $default  reduce using rule 5 (stmt_wo_func)


State 16

    6 stmt_wo_func: arith .

    $default  reduce using rule 6 (stmt_wo_func)


State 17

   33 arith: int_arith . SEMI
   41 int_arith_arg: int_arith .

    SEMI  shift, and go to state 44

    $default  reduce using rule 41 (int_arith_arg)


State 18

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48


State 19

   34 arith: float_arith . SEMI
   50 float_arith_arg: float_arith .

    SEMI  shift, and go to state 49

    $default  reduce using rule 50 (float_arith_arg)


State 20

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53


State 21

    7 stmt_wo_func: func_call . SEMI
   42 int_arith_arg: func_call .
   51 float_arith_arg: func_call .

    SEMI  shift, and go to state 54

    PLUS      reduce using rule 42 (int_arith_arg)
    PLUS      [reduce using rule 51 (float_arith_arg)]
    MINUS     reduce using rule 42 (int_arith_arg)
    MINUS     [reduce using rule 51 (float_arith_arg)]
    MULT      reduce using rule 42 (int_arith_arg)
    MULT      [reduce using rule 51 (float_arith_arg)]
    DIV       reduce using rule 42 (int_arith_arg)
    DIV       [reduce using rule 51 (float_arith_arg)]
    $default  reduce using rule 42 (int_arith_arg)


State 22

   11 stmt_with_func: func_decl .

    $default  reduce using rule 11 (stmt_with_func)


State 23

   12 stmt_with_func: func_def .

    $default  reduce using rule 12 (stmt_with_func)


State 24

    8 stmt_wo_func: switch_case .

    $default  reduce using rule 8 (stmt_wo_func)


State 25

    9 stmt_wo_func: for_loop .

    $default  reduce using rule 9 (stmt_wo_func)


State 26

   10 stmt_wo_func: while_loop .

    $default  reduce using rule 10 (stmt_wo_func)


State 27

   41 int_arith_arg: int_arith .
   43              | LP int_arith . RP

    RP  shift, and go to state 55

    $default  reduce using rule 41 (int_arith_arg)


State 28

   50 float_arith_arg: float_arith .
   52                | LP float_arith . RP

    RP  shift, and go to state 56

    $default  reduce using rule 50 (float_arith_arg)


State 29

   42 int_arith_arg: func_call .
   51 float_arith_arg: func_call .

    PLUS      reduce using rule 42 (int_arith_arg)
    PLUS      [reduce using rule 51 (float_arith_arg)]
    MINUS     reduce using rule 42 (int_arith_arg)
    MINUS     [reduce using rule 51 (float_arith_arg)]
    MULT      reduce using rule 42 (int_arith_arg)
    MULT      [reduce using rule 51 (float_arith_arg)]
    DIV       reduce using rule 42 (int_arith_arg)
    DIV       [reduce using rule 51 (float_arith_arg)]
    LE        reduce using rule 42 (int_arith_arg)
    LE        [reduce using rule 51 (float_arith_arg)]
    GE        reduce using rule 42 (int_arith_arg)
    GE        [reduce using rule 51 (float_arith_arg)]
    EQ        reduce using rule 42 (int_arith_arg)
    EQ        [reduce using rule 51 (float_arith_arg)]
    NEQ       reduce using rule 42 (int_arith_arg)
    NEQ       [reduce using rule 51 (float_arith_arg)]
    LT        reduce using rule 42 (int_arith_arg)
    LT        [reduce using rule 51 (float_arith_arg)]
    GT        reduce using rule 42 (int_arith_arg)
    GT        [reduce using rule 51 (float_arith_arg)]
    $default  reduce using rule 42 (int_arith_arg)


State 30

   56 func_decl: VOID ID . LP decl_arg_list RP SEMI
   65 func_def: VOID ID . LP def_arg_list RP stmt_wo_func
   66         | VOID ID . LP def_arg_list RP LC body RC

    LP  shift, and go to state 57


State 31

   17 int_assign: ID .
   18           | ID . EQ int_id_assign_list
   57 func_decl: INT_DECL ID . LP decl_arg_list RP SEMI
   67 func_def: INT_DECL ID . LP def_arg_list RP stmt_wo_func
   68         | INT_DECL ID . LP def_arg_list RP LC body RC

    EQ  shift, and go to state 58
    LP  shift, and go to state 59

    $default  reduce using rule 17 (int_assign)


State 32

   13 var_decl: INT_DECL int_id_list .

    $default  reduce using rule 13 (var_decl)


State 33

   15 int_id_list: int_assign . SEMI
   16            | int_assign . COMMA int_id_list

    COMMA  shift, and go to state 60
    SEMI   shift, and go to state 61


State 34

   26 float_assign: ID .
   27             | ID . EQ float_id_assign_list
   58 func_decl: FLOAT_DECL ID . LP decl_arg_list RP SEMI
   69 func_def: FLOAT_DECL ID . LP def_arg_list RP stmt_wo_func
   70         | FLOAT_DECL ID . LP def_arg_list RP LC body RC

    EQ  shift, and go to state 62
    LP  shift, and go to state 63

    $default  reduce using rule 26 (float_assign)


State 35

   14 var_decl: FLOAT_DECL float_id_list .

    $default  reduce using rule 14 (var_decl)


State 36

   24 float_id_list: float_assign . SEMI
   25              | float_assign . COMMA float_id_list

    COMMA  shift, and go to state 64
    SEMI   shift, and go to state 65


State 37

   53 func_call: ID LP . call_arg_list RP

    ID  shift, and go to state 66

    call_arg_list  go to state 67


State 38

   95 switch_case: SWITCH LP . ID RP LC cases RC

    ID  shift, and go to state 68


State 39

   94 switch_case: SWITCH ID . COL LC cases RC

    COL  shift, and go to state 69


State 40

  111 for_loop: FOR LP . for_expr RP stmt_wo_func
  112         | FOR LP . for_expr RP LC body RC

    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 72

    ID        [reduce using rule 114 (for_first)]
    $default  reduce using rule 114 (for_first)

    var_decl       go to state 73
    int_id_list    go to state 74
    int_assign     go to state 33
    float_id_list  go to state 75
    float_assign   go to state 36
    for_expr       go to state 76
    for_first      go to state 77


State 41

  123 while_loop: WHILE LP . cond RP stmt_wo_func
  124           | WHILE LP . cond RP LC body RC

    EXCL   shift, and go to state 78
    LP     shift, and go to state 1
    ID     shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    int_arith        go to state 79
    int_arith_arg    go to state 80
    float_arith      go to state 81
    float_arith_arg  go to state 82
    func_call        go to state 29
    cond             go to state 83
    and_expr         go to state 84
    expr             go to state 85


State 42

    0 $accept: stmts $end .

    $default  accept


State 43

    2 stmts: stmt stmts .

    $default  reduce using rule 2 (stmts)


State 44

   33 arith: int_arith SEMI .

    $default  reduce using rule 33 (arith)


State 45

   35 int_arith: int_arith_arg PLUS . int_arith_arg

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 79
    int_arith_arg  go to state 88
    func_call      go to state 89


State 46

   36 int_arith: int_arith_arg MINUS . int_arith_arg

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 79
    int_arith_arg  go to state 90
    func_call      go to state 89


State 47

   37 int_arith: int_arith_arg MULT . int_arith_arg

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 79
    int_arith_arg  go to state 91
    func_call      go to state 89


State 48

   38 int_arith: int_arith_arg DIV . int_arith_arg

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 79
    int_arith_arg  go to state 92
    func_call      go to state 89


State 49

   34 arith: float_arith SEMI .

    $default  reduce using rule 34 (arith)


State 50

   44 float_arith: float_arith_arg PLUS . float_arith_arg

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 81
    float_arith_arg  go to state 95
    func_call        go to state 96


State 51

   45 float_arith: float_arith_arg MINUS . float_arith_arg

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 81
    float_arith_arg  go to state 97
    func_call        go to state 96


State 52

   46 float_arith: float_arith_arg MULT . float_arith_arg

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 81
    float_arith_arg  go to state 98
    func_call        go to state 96


State 53

   47 float_arith: float_arith_arg DIV . float_arith_arg

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 81
    float_arith_arg  go to state 99
    func_call        go to state 96


State 54

    7 stmt_wo_func: func_call SEMI .

    $default  reduce using rule 7 (stmt_wo_func)


State 55

   43 int_arith_arg: LP int_arith RP .

    $default  reduce using rule 43 (int_arith_arg)


State 56

   52 float_arith_arg: LP float_arith RP .

    $default  reduce using rule 52 (float_arith_arg)


State 57

   56 func_decl: VOID ID LP . decl_arg_list RP SEMI
   65 func_def: VOID ID LP . def_arg_list RP stmt_wo_func
   66         | VOID ID LP . def_arg_list RP LC body RC

    INT_DECL    shift, and go to state 100
    FLOAT_DECL  shift, and go to state 101

    decl_arg_list  go to state 102
    decl_arg       go to state 103
    def_arg_list   go to state 104
    def_arg        go to state 105


State 58

   18 int_assign: ID EQ . int_id_assign_list

    ID  shift, and go to state 106

    int_id_assign_list  go to state 107


State 59

   57 func_decl: INT_DECL ID LP . decl_arg_list RP SEMI
   67 func_def: INT_DECL ID LP . def_arg_list RP stmt_wo_func
   68         | INT_DECL ID LP . def_arg_list RP LC body RC

    INT_DECL    shift, and go to state 100
    FLOAT_DECL  shift, and go to state 101

    decl_arg_list  go to state 108
    decl_arg       go to state 103
    def_arg_list   go to state 109
    def_arg        go to state 105


State 60

   16 int_id_list: int_assign COMMA . int_id_list

    ID  shift, and go to state 110

    int_id_list  go to state 111
    int_assign   go to state 33


State 61

   15 int_id_list: int_assign SEMI .

    $default  reduce using rule 15 (int_id_list)


State 62

   27 float_assign: ID EQ . float_id_assign_list

    ID  shift, and go to state 112

    float_id_assign_list  go to state 113


State 63

   58 func_decl: FLOAT_DECL ID LP . decl_arg_list RP SEMI
   69 func_def: FLOAT_DECL ID LP . def_arg_list RP stmt_wo_func
   70         | FLOAT_DECL ID LP . def_arg_list RP LC body RC

    INT_DECL    shift, and go to state 100
    FLOAT_DECL  shift, and go to state 101

    decl_arg_list  go to state 114
    decl_arg       go to state 103
    def_arg_list   go to state 115
    def_arg        go to state 105


State 64

   25 float_id_list: float_assign COMMA . float_id_list

    ID  shift, and go to state 116

    float_id_list  go to state 117
    float_assign   go to state 36


State 65

   24 float_id_list: float_assign SEMI .

    $default  reduce using rule 24 (float_id_list)


State 66

   54 call_arg_list: ID .
   55              | ID . COMMA call_arg_list

    COMMA  shift, and go to state 118

    $default  reduce using rule 54 (call_arg_list)


State 67

   53 func_call: ID LP call_arg_list . RP

    RP  shift, and go to state 119


State 68

   95 switch_case: SWITCH LP ID . RP LC cases RC

    RP  shift, and go to state 120


State 69

   94 switch_case: SWITCH ID COL . LC cases RC

    LC  shift, and go to state 121


State 70

   13 var_decl: INT_DECL . int_id_list

    ID  shift, and go to state 110

    int_id_list  go to state 32
    int_assign   go to state 33


State 71

   14 var_decl: FLOAT_DECL . float_id_list

    ID  shift, and go to state 116

    float_id_list  go to state 35
    float_assign   go to state 36


State 72

   17 int_assign: ID .
   18           | ID . EQ int_id_assign_list
   26 float_assign: ID .
   27             | ID . EQ float_id_assign_list

    EQ  shift, and go to state 122

    COMMA     reduce using rule 17 (int_assign)
    COMMA     [reduce using rule 26 (float_assign)]
    SEMI      reduce using rule 17 (int_assign)
    SEMI      [reduce using rule 26 (float_assign)]
    $default  reduce using rule 17 (int_assign)


State 73

  115 for_first: var_decl .

    $default  reduce using rule 115 (for_first)


State 74

  116 for_first: int_id_list .

    $default  reduce using rule 116 (for_first)


State 75

  117 for_first: float_id_list .

    $default  reduce using rule 117 (for_first)


State 76

  111 for_loop: FOR LP for_expr . RP stmt_wo_func
  112         | FOR LP for_expr . RP LC body RC

    RP  shift, and go to state 123


State 77

  113 for_expr: for_first . for_second for_third

    EXCL   shift, and go to state 78
    LP     shift, and go to state 1
    ID     shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    ID        [reduce using rule 118 (for_second)]
    $default  reduce using rule 118 (for_second)

    int_arith        go to state 79
    int_arith_arg    go to state 80
    float_arith      go to state 81
    float_arith_arg  go to state 82
    func_call        go to state 29
    cond             go to state 124
    and_expr         go to state 84
    expr             go to state 85
    for_second       go to state 125


State 78

   93 expr: EXCL . cond

    EXCL   shift, and go to state 78
    LP     shift, and go to state 1
    ID     shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    int_arith        go to state 79
    int_arith_arg    go to state 80
    float_arith      go to state 81
    float_arith_arg  go to state 82
    func_call        go to state 29
    cond             go to state 126
    and_expr         go to state 84
    expr             go to state 85


State 79

   41 int_arith_arg: int_arith .

    $default  reduce using rule 41 (int_arith_arg)


State 80

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg
   81 expr: int_arith_arg . LT int_arith_arg
   82     | int_arith_arg . GT int_arith_arg
   83     | int_arith_arg . LE int_arith_arg
   84     | int_arith_arg . GE int_arith_arg
   85     | int_arith_arg . EQ EQ int_arith_arg
   86     | int_arith_arg . NEQ int_arith_arg

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48
    LE     shift, and go to state 127
    GE     shift, and go to state 128
    EQ     shift, and go to state 129
    NEQ    shift, and go to state 130
    LT     shift, and go to state 131
    GT     shift, and go to state 132


State 81

   50 float_arith_arg: float_arith .

    $default  reduce using rule 50 (float_arith_arg)


State 82

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg
   87 expr: float_arith_arg . LT float_arith_arg
   88     | float_arith_arg . GT float_arith_arg
   89     | float_arith_arg . LE float_arith_arg
   90     | float_arith_arg . GE float_arith_arg
   91     | float_arith_arg . EQ EQ float_arith_arg
   92     | float_arith_arg . NEQ float_arith_arg

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53
    LE     shift, and go to state 133
    GE     shift, and go to state 134
    EQ     shift, and go to state 135
    NEQ    shift, and go to state 136
    LT     shift, and go to state 137
    GT     shift, and go to state 138


State 83

  123 while_loop: WHILE LP cond . RP stmt_wo_func
  124           | WHILE LP cond . RP LC body RC

    RP  shift, and go to state 139


State 84

   77 cond: and_expr .
   78     | and_expr . OR cond

    OR  shift, and go to state 140

    OR        [reduce using rule 77 (cond)]
    $default  reduce using rule 77 (cond)


State 85

   79 and_expr: expr .
   80         | expr . AND and_expr

    AND  shift, and go to state 141

    AND       [reduce using rule 79 (and_expr)]
    $default  reduce using rule 79 (and_expr)


State 86

   43 int_arith_arg: LP . int_arith RP

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 27
    int_arith_arg  go to state 18
    func_call      go to state 89


State 87

   39 int_arith_arg: ID .
   53 func_call: ID . LP call_arg_list RP

    LP  shift, and go to state 37

    $default  reduce using rule 39 (int_arith_arg)


State 88

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   35          | int_arith_arg PLUS int_arith_arg .
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48

    PLUS      [reduce using rule 35 (int_arith)]
    MINUS     [reduce using rule 35 (int_arith)]
    MULT      [reduce using rule 35 (int_arith)]
    DIV       [reduce using rule 35 (int_arith)]
    $default  reduce using rule 35 (int_arith)


State 89

   42 int_arith_arg: func_call .

    $default  reduce using rule 42 (int_arith_arg)


State 90

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   36          | int_arith_arg MINUS int_arith_arg .
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48

    PLUS      [reduce using rule 36 (int_arith)]
    MINUS     [reduce using rule 36 (int_arith)]
    MULT      [reduce using rule 36 (int_arith)]
    DIV       [reduce using rule 36 (int_arith)]
    $default  reduce using rule 36 (int_arith)


State 91

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   37          | int_arith_arg MULT int_arith_arg .
   38          | int_arith_arg . DIV int_arith_arg

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48

    PLUS      [reduce using rule 37 (int_arith)]
    MINUS     [reduce using rule 37 (int_arith)]
    MULT      [reduce using rule 37 (int_arith)]
    DIV       [reduce using rule 37 (int_arith)]
    $default  reduce using rule 37 (int_arith)


State 92

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg
   38          | int_arith_arg DIV int_arith_arg .

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48

    PLUS      [reduce using rule 38 (int_arith)]
    MINUS     [reduce using rule 38 (int_arith)]
    MULT      [reduce using rule 38 (int_arith)]
    DIV       [reduce using rule 38 (int_arith)]
    $default  reduce using rule 38 (int_arith)


State 93

   52 float_arith_arg: LP . float_arith RP

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 28
    float_arith_arg  go to state 20
    func_call        go to state 96


State 94

   48 float_arith_arg: ID .
   53 func_call: ID . LP call_arg_list RP

    LP  shift, and go to state 37

    $default  reduce using rule 48 (float_arith_arg)


State 95

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   44            | float_arith_arg PLUS float_arith_arg .
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53

    PLUS      [reduce using rule 44 (float_arith)]
    MINUS     [reduce using rule 44 (float_arith)]
    MULT      [reduce using rule 44 (float_arith)]
    DIV       [reduce using rule 44 (float_arith)]
    $default  reduce using rule 44 (float_arith)


State 96

   51 float_arith_arg: func_call .

    $default  reduce using rule 51 (float_arith_arg)


State 97

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   45            | float_arith_arg MINUS float_arith_arg .
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53

    PLUS      [reduce using rule 45 (float_arith)]
    MINUS     [reduce using rule 45 (float_arith)]
    MULT      [reduce using rule 45 (float_arith)]
    DIV       [reduce using rule 45 (float_arith)]
    $default  reduce using rule 45 (float_arith)


State 98

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   46            | float_arith_arg MULT float_arith_arg .
   47            | float_arith_arg . DIV float_arith_arg

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53

    PLUS      [reduce using rule 46 (float_arith)]
    MINUS     [reduce using rule 46 (float_arith)]
    MULT      [reduce using rule 46 (float_arith)]
    DIV       [reduce using rule 46 (float_arith)]
    $default  reduce using rule 46 (float_arith)


State 99

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg
   47            | float_arith_arg DIV float_arith_arg .

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53

    PLUS      [reduce using rule 47 (float_arith)]
    MINUS     [reduce using rule 47 (float_arith)]
    MULT      [reduce using rule 47 (float_arith)]
    DIV       [reduce using rule 47 (float_arith)]
    $default  reduce using rule 47 (float_arith)


State 100

   61 decl_arg: INT_DECL .
   63         | INT_DECL . ID
   73 def_arg: INT_DECL . ID

    ID  shift, and go to state 142

    $default  reduce using rule 61 (decl_arg)


State 101

   62 decl_arg: FLOAT_DECL .
   64         | FLOAT_DECL . ID
   74 def_arg: FLOAT_DECL . ID

    ID  shift, and go to state 143

    $default  reduce using rule 62 (decl_arg)


State 102

   56 func_decl: VOID ID LP decl_arg_list . RP SEMI

    RP  shift, and go to state 144


State 103

   59 decl_arg_list: decl_arg .
   60              | decl_arg . COMMA decl_arg_list

    COMMA  shift, and go to state 145

    $default  reduce using rule 59 (decl_arg_list)


State 104

   65 func_def: VOID ID LP def_arg_list . RP stmt_wo_func
   66         | VOID ID LP def_arg_list . RP LC body RC

    RP  shift, and go to state 146


State 105

   71 def_arg_list: def_arg .
   72             | def_arg . COMMA def_arg_list

    COMMA  shift, and go to state 147

    $default  reduce using rule 71 (def_arg_list)


State 106

   19 int_id_assign_list: ID .
   20                   | ID . EQ INT
   21                   | ID . EQ int_arith
   22                   | ID . EQ func_call
   23                   | ID . EQ int_id_assign_list

    EQ  shift, and go to state 148

    $default  reduce using rule 19 (int_id_assign_list)


State 107

   18 int_assign: ID EQ int_id_assign_list .

    $default  reduce using rule 18 (int_assign)


State 108

   57 func_decl: INT_DECL ID LP decl_arg_list . RP SEMI

    RP  shift, and go to state 149


State 109

   67 func_def: INT_DECL ID LP def_arg_list . RP stmt_wo_func
   68         | INT_DECL ID LP def_arg_list . RP LC body RC

    RP  shift, and go to state 150


State 110

   17 int_assign: ID .
   18           | ID . EQ int_id_assign_list

    EQ  shift, and go to state 58

    $default  reduce using rule 17 (int_assign)


State 111

   16 int_id_list: int_assign COMMA int_id_list .

    $default  reduce using rule 16 (int_id_list)


State 112

   28 float_id_assign_list: ID .
   29                     | ID . EQ FLOAT
   30                     | ID . EQ float_arith
   31                     | ID . EQ func_call
   32                     | ID . EQ float_id_assign_list

    EQ  shift, and go to state 151

    $default  reduce using rule 28 (float_id_assign_list)


State 113

   27 float_assign: ID EQ float_id_assign_list .

    $default  reduce using rule 27 (float_assign)


State 114

   58 func_decl: FLOAT_DECL ID LP decl_arg_list . RP SEMI

    RP  shift, and go to state 152


State 115

   69 func_def: FLOAT_DECL ID LP def_arg_list . RP stmt_wo_func
   70         | FLOAT_DECL ID LP def_arg_list . RP LC body RC

    RP  shift, and go to state 153


State 116

   26 float_assign: ID .
   27             | ID . EQ float_id_assign_list

    EQ  shift, and go to state 62

    $default  reduce using rule 26 (float_assign)


State 117

   25 float_id_list: float_assign COMMA float_id_list .

    $default  reduce using rule 25 (float_id_list)


State 118

   55 call_arg_list: ID COMMA . call_arg_list

    ID  shift, and go to state 66

    call_arg_list  go to state 154


State 119

   53 func_call: ID LP call_arg_list RP .

    $default  reduce using rule 53 (func_call)


State 120

   95 switch_case: SWITCH LP ID RP . LC cases RC

    LC  shift, and go to state 155


State 121

   94 switch_case: SWITCH ID COL LC . cases RC

    CASE  shift, and go to state 156

    cases  go to state 157
    case   go to state 158


State 122

   18 int_assign: ID EQ . int_id_assign_list
   27 float_assign: ID EQ . float_id_assign_list

    ID  shift, and go to state 159

    int_id_assign_list    go to state 107
    float_id_assign_list  go to state 113


State 123

  111 for_loop: FOR LP for_expr RP . stmt_wo_func
  112         | FOR LP for_expr RP . LC body RC

    LC          shift, and go to state 160
    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 161
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 124

  119 for_second: cond . SEMI

    SEMI  shift, and go to state 162


State 125

  113 for_expr: for_first for_second . for_third

    ID  shift, and go to state 163

    $default  reduce using rule 120 (for_third)

    for_third  go to state 164


State 126

   93 expr: EXCL cond .

    $default  reduce using rule 93 (expr)


State 127

   83 expr: int_arith_arg LE . int_arith_arg

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 79
    int_arith_arg  go to state 165
    func_call      go to state 89


State 128

   84 expr: int_arith_arg GE . int_arith_arg

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 79
    int_arith_arg  go to state 166
    func_call      go to state 89


State 129

   85 expr: int_arith_arg EQ . EQ int_arith_arg

    EQ  shift, and go to state 167


State 130

   86 expr: int_arith_arg NEQ . int_arith_arg

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 79
    int_arith_arg  go to state 168
    func_call      go to state 89


State 131

   81 expr: int_arith_arg LT . int_arith_arg

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 79
    int_arith_arg  go to state 169
    func_call      go to state 89


State 132

   82 expr: int_arith_arg GT . int_arith_arg

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 79
    int_arith_arg  go to state 170
    func_call      go to state 89


State 133

   89 expr: float_arith_arg LE . float_arith_arg

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 81
    float_arith_arg  go to state 171
    func_call        go to state 96


State 134

   90 expr: float_arith_arg GE . float_arith_arg

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 81
    float_arith_arg  go to state 172
    func_call        go to state 96


State 135

   91 expr: float_arith_arg EQ . EQ float_arith_arg

    EQ  shift, and go to state 173


State 136

   92 expr: float_arith_arg NEQ . float_arith_arg

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 81
    float_arith_arg  go to state 174
    func_call        go to state 96


State 137

   87 expr: float_arith_arg LT . float_arith_arg

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 81
    float_arith_arg  go to state 175
    func_call        go to state 96


State 138

   88 expr: float_arith_arg GT . float_arith_arg

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 81
    float_arith_arg  go to state 176
    func_call        go to state 96


State 139

  123 while_loop: WHILE LP cond RP . stmt_wo_func
  124           | WHILE LP cond RP . LC body RC

    LC          shift, and go to state 177
    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 178
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 140

   78 cond: and_expr OR . cond

    EXCL   shift, and go to state 78
    LP     shift, and go to state 1
    ID     shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    int_arith        go to state 79
    int_arith_arg    go to state 80
    float_arith      go to state 81
    float_arith_arg  go to state 82
    func_call        go to state 29
    cond             go to state 179
    and_expr         go to state 84
    expr             go to state 85


State 141

   80 and_expr: expr AND . and_expr

    EXCL   shift, and go to state 78
    LP     shift, and go to state 1
    ID     shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    int_arith        go to state 79
    int_arith_arg    go to state 80
    float_arith      go to state 81
    float_arith_arg  go to state 82
    func_call        go to state 29
    and_expr         go to state 180
    expr             go to state 85


State 142

   63 decl_arg: INT_DECL ID .
   73 def_arg: INT_DECL ID .

    COMMA     reduce using rule 63 (decl_arg)
    COMMA     [reduce using rule 73 (def_arg)]
    RP        reduce using rule 63 (decl_arg)
    RP        [reduce using rule 73 (def_arg)]
    $default  reduce using rule 63 (decl_arg)


State 143

   64 decl_arg: FLOAT_DECL ID .
   74 def_arg: FLOAT_DECL ID .

    COMMA     reduce using rule 64 (decl_arg)
    COMMA     [reduce using rule 74 (def_arg)]
    RP        reduce using rule 64 (decl_arg)
    RP        [reduce using rule 74 (def_arg)]
    $default  reduce using rule 64 (decl_arg)


State 144

   56 func_decl: VOID ID LP decl_arg_list RP . SEMI

    SEMI  shift, and go to state 181


State 145

   60 decl_arg_list: decl_arg COMMA . decl_arg_list

    INT_DECL    shift, and go to state 182
    FLOAT_DECL  shift, and go to state 183

    decl_arg_list  go to state 184
    decl_arg       go to state 103


State 146

   65 func_def: VOID ID LP def_arg_list RP . stmt_wo_func
   66         | VOID ID LP def_arg_list RP . LC body RC

    LC          shift, and go to state 185
    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 186
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 147

   72 def_arg_list: def_arg COMMA . def_arg_list

    INT_DECL    shift, and go to state 187
    FLOAT_DECL  shift, and go to state 188

    def_arg_list  go to state 189
    def_arg       go to state 105


State 148

   20 int_id_assign_list: ID EQ . INT
   21                   | ID EQ . int_arith
   22                   | ID EQ . func_call
   23                   | ID EQ . int_id_assign_list

    LP   shift, and go to state 86
    ID   shift, and go to state 190
    INT  shift, and go to state 191

    int_id_assign_list  go to state 192
    int_arith           go to state 193
    int_arith_arg       go to state 18
    func_call           go to state 194


State 149

   57 func_decl: INT_DECL ID LP decl_arg_list RP . SEMI

    SEMI  shift, and go to state 195


State 150

   67 func_def: INT_DECL ID LP def_arg_list RP . stmt_wo_func
   68         | INT_DECL ID LP def_arg_list RP . LC body RC

    LC          shift, and go to state 196
    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 197
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 151

   29 float_id_assign_list: ID EQ . FLOAT
   30                     | ID EQ . float_arith
   31                     | ID EQ . func_call
   32                     | ID EQ . float_id_assign_list

    LP     shift, and go to state 93
    ID     shift, and go to state 198
    FLOAT  shift, and go to state 199

    float_id_assign_list  go to state 200
    float_arith           go to state 201
    float_arith_arg       go to state 20
    func_call             go to state 202


State 152

   58 func_decl: FLOAT_DECL ID LP decl_arg_list RP . SEMI

    SEMI  shift, and go to state 203


State 153

   69 func_def: FLOAT_DECL ID LP def_arg_list RP . stmt_wo_func
   70         | FLOAT_DECL ID LP def_arg_list RP . LC body RC

    LC          shift, and go to state 204
    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 205
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 154

   55 call_arg_list: ID COMMA call_arg_list .

    $default  reduce using rule 55 (call_arg_list)


State 155

   95 switch_case: SWITCH LP ID RP LC . cases RC

    CASE  shift, and go to state 156

    cases  go to state 206
    case   go to state 158


State 156

   98 case: CASE . INT COL body break
   99     | CASE . INT COL LC body RC break
  100     | CASE . LP INT RP COL body break
  101     | CASE . LP INT RP COL LC body RC break
  102     | CASE . FLOAT COL body break
  103     | CASE . FLOAT COL LC body RC break
  104     | CASE . LP FLOAT RP COL body break
  105     | CASE . LP FLOAT RP COL LC body RC break

    LP     shift, and go to state 207
    INT    shift, and go to state 208
    FLOAT  shift, and go to state 209


State 157

   94 switch_case: SWITCH ID COL LC cases . RC

    RC  shift, and go to state 210


State 158

   96 cases: case . default
   97      | case . cases

    CASE     shift, and go to state 156
    DEFAULT  shift, and go to state 211

    $default  reduce using rule 106 (default)

    cases    go to state 212
    case     go to state 158
    default  go to state 213


State 159

   19 int_id_assign_list: ID .
   20                   | ID . EQ INT
   21                   | ID . EQ int_arith
   22                   | ID . EQ func_call
   23                   | ID . EQ int_id_assign_list
   28 float_id_assign_list: ID .
   29                     | ID . EQ FLOAT
   30                     | ID . EQ float_arith
   31                     | ID . EQ func_call
   32                     | ID . EQ float_id_assign_list

    EQ  shift, and go to state 214

    COMMA     reduce using rule 19 (int_id_assign_list)
    COMMA     [reduce using rule 28 (float_id_assign_list)]
    SEMI      reduce using rule 19 (int_id_assign_list)
    SEMI      [reduce using rule 28 (float_id_assign_list)]
    RP        reduce using rule 19 (int_id_assign_list)
    RP        [reduce using rule 28 (float_id_assign_list)]
    $default  reduce using rule 19 (int_id_assign_list)


State 160

  112 for_loop: FOR LP for_expr RP LC . body RC

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 216
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 161

  111 for_loop: FOR LP for_expr RP stmt_wo_func .

    $default  reduce using rule 111 (for_loop)


State 162

  119 for_second: cond SEMI .

    $default  reduce using rule 119 (for_second)


State 163

  121 for_third: ID . EQ int_id_assign_list
  122          | ID . EQ float_id_assign_list

    EQ  shift, and go to state 217


State 164

  113 for_expr: for_first for_second for_third .

    $default  reduce using rule 113 (for_expr)


State 165

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg
   83 expr: int_arith_arg LE int_arith_arg .

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48

    $default  reduce using rule 83 (expr)


State 166

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg
   84 expr: int_arith_arg GE int_arith_arg .

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48

    $default  reduce using rule 84 (expr)


State 167

   85 expr: int_arith_arg EQ EQ . int_arith_arg

    LP   shift, and go to state 86
    ID   shift, and go to state 87
    INT  shift, and go to state 6

    int_arith      go to state 79
    int_arith_arg  go to state 218
    func_call      go to state 89


State 168

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg
   86 expr: int_arith_arg NEQ int_arith_arg .

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48

    $default  reduce using rule 86 (expr)


State 169

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg
   81 expr: int_arith_arg LT int_arith_arg .

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48

    $default  reduce using rule 81 (expr)


State 170

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg
   82 expr: int_arith_arg GT int_arith_arg .

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48

    $default  reduce using rule 82 (expr)


State 171

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg
   89 expr: float_arith_arg LE float_arith_arg .

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53

    $default  reduce using rule 89 (expr)


State 172

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg
   90 expr: float_arith_arg GE float_arith_arg .

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53

    $default  reduce using rule 90 (expr)


State 173

   91 expr: float_arith_arg EQ EQ . float_arith_arg

    LP     shift, and go to state 93
    ID     shift, and go to state 94
    FLOAT  shift, and go to state 7

    float_arith      go to state 81
    float_arith_arg  go to state 219
    func_call        go to state 96


State 174

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg
   92 expr: float_arith_arg NEQ float_arith_arg .

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53

    $default  reduce using rule 92 (expr)


State 175

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg
   87 expr: float_arith_arg LT float_arith_arg .

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53

    $default  reduce using rule 87 (expr)


State 176

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg
   88 expr: float_arith_arg GT float_arith_arg .

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53

    $default  reduce using rule 88 (expr)


State 177

  124 while_loop: WHILE LP cond RP LC . body RC

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 220
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 178

  123 while_loop: WHILE LP cond RP stmt_wo_func .

    $default  reduce using rule 123 (while_loop)


State 179

   78 cond: and_expr OR cond .

    $default  reduce using rule 78 (cond)


State 180

   80 and_expr: expr AND and_expr .

    $default  reduce using rule 80 (and_expr)


State 181

   56 func_decl: VOID ID LP decl_arg_list RP SEMI .

    $default  reduce using rule 56 (func_decl)


State 182

   61 decl_arg: INT_DECL .
   63         | INT_DECL . ID

    ID  shift, and go to state 221

    $default  reduce using rule 61 (decl_arg)


State 183

   62 decl_arg: FLOAT_DECL .
   64         | FLOAT_DECL . ID

    ID  shift, and go to state 222

    $default  reduce using rule 62 (decl_arg)


State 184

   60 decl_arg_list: decl_arg COMMA decl_arg_list .

    $default  reduce using rule 60 (decl_arg_list)


State 185

   66 func_def: VOID ID LP def_arg_list RP LC . body RC

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 223
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 186

   65 func_def: VOID ID LP def_arg_list RP stmt_wo_func .

    $default  reduce using rule 65 (func_def)


State 187

   73 def_arg: INT_DECL . ID

    ID  shift, and go to state 224


State 188

   74 def_arg: FLOAT_DECL . ID

    ID  shift, and go to state 225


State 189

   72 def_arg_list: def_arg COMMA def_arg_list .

    $default  reduce using rule 72 (def_arg_list)


State 190

   19 int_id_assign_list: ID .
   20                   | ID . EQ INT
   21                   | ID . EQ int_arith
   22                   | ID . EQ func_call
   23                   | ID . EQ int_id_assign_list
   39 int_arith_arg: ID .
   53 func_call: ID . LP call_arg_list RP

    EQ  shift, and go to state 148
    LP  shift, and go to state 37

    COMMA     reduce using rule 19 (int_id_assign_list)
    SEMI      reduce using rule 19 (int_id_assign_list)
    $default  reduce using rule 39 (int_arith_arg)


State 191

   20 int_id_assign_list: ID EQ INT .
   40 int_arith_arg: INT .

    COMMA     reduce using rule 20 (int_id_assign_list)
    SEMI      reduce using rule 20 (int_id_assign_list)
    RP        reduce using rule 20 (int_id_assign_list)
    $default  reduce using rule 40 (int_arith_arg)


State 192

   23 int_id_assign_list: ID EQ int_id_assign_list .

    $default  reduce using rule 23 (int_id_assign_list)


State 193

   21 int_id_assign_list: ID EQ int_arith .
   41 int_arith_arg: int_arith .

    COMMA     reduce using rule 21 (int_id_assign_list)
    SEMI      reduce using rule 21 (int_id_assign_list)
    RP        reduce using rule 21 (int_id_assign_list)
    $default  reduce using rule 41 (int_arith_arg)


State 194

   22 int_id_assign_list: ID EQ func_call .
   42 int_arith_arg: func_call .

    COMMA     reduce using rule 22 (int_id_assign_list)
    SEMI      reduce using rule 22 (int_id_assign_list)
    $default  reduce using rule 42 (int_arith_arg)


State 195

   57 func_decl: INT_DECL ID LP decl_arg_list RP SEMI .

    $default  reduce using rule 57 (func_decl)


State 196

   68 func_def: INT_DECL ID LP def_arg_list RP LC . body RC

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 226
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 197

   67 func_def: INT_DECL ID LP def_arg_list RP stmt_wo_func .

    $default  reduce using rule 67 (func_def)


State 198

   28 float_id_assign_list: ID .
   29                     | ID . EQ FLOAT
   30                     | ID . EQ float_arith
   31                     | ID . EQ func_call
   32                     | ID . EQ float_id_assign_list
   48 float_arith_arg: ID .
   53 func_call: ID . LP call_arg_list RP

    EQ  shift, and go to state 151
    LP  shift, and go to state 37

    COMMA     reduce using rule 28 (float_id_assign_list)
    SEMI      reduce using rule 28 (float_id_assign_list)
    $default  reduce using rule 48 (float_arith_arg)


State 199

   29 float_id_assign_list: ID EQ FLOAT .
   49 float_arith_arg: FLOAT .

    COMMA     reduce using rule 29 (float_id_assign_list)
    SEMI      reduce using rule 29 (float_id_assign_list)
    RP        reduce using rule 29 (float_id_assign_list)
    $default  reduce using rule 49 (float_arith_arg)


State 200

   32 float_id_assign_list: ID EQ float_id_assign_list .

    $default  reduce using rule 32 (float_id_assign_list)


State 201

   30 float_id_assign_list: ID EQ float_arith .
   50 float_arith_arg: float_arith .

    COMMA     reduce using rule 30 (float_id_assign_list)
    SEMI      reduce using rule 30 (float_id_assign_list)
    RP        reduce using rule 30 (float_id_assign_list)
    $default  reduce using rule 50 (float_arith_arg)


State 202

   31 float_id_assign_list: ID EQ func_call .
   51 float_arith_arg: func_call .

    COMMA     reduce using rule 31 (float_id_assign_list)
    SEMI      reduce using rule 31 (float_id_assign_list)
    $default  reduce using rule 51 (float_arith_arg)


State 203

   58 func_decl: FLOAT_DECL ID LP decl_arg_list RP SEMI .

    $default  reduce using rule 58 (func_decl)


State 204

   70 func_def: FLOAT_DECL ID LP def_arg_list RP LC . body RC

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 227
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 205

   69 func_def: FLOAT_DECL ID LP def_arg_list RP stmt_wo_func .

    $default  reduce using rule 69 (func_def)


State 206

   95 switch_case: SWITCH LP ID RP LC cases . RC

    RC  shift, and go to state 228


State 207

  100 case: CASE LP . INT RP COL body break
  101     | CASE LP . INT RP COL LC body RC break
  104     | CASE LP . FLOAT RP COL body break
  105     | CASE LP . FLOAT RP COL LC body RC break

    INT    shift, and go to state 229
    FLOAT  shift, and go to state 230


State 208

   98 case: CASE INT . COL body break
   99     | CASE INT . COL LC body RC break

    COL  shift, and go to state 231


State 209

  102 case: CASE FLOAT . COL body break
  103     | CASE FLOAT . COL LC body RC break

    COL  shift, and go to state 232


State 210

   94 switch_case: SWITCH ID COL LC cases RC .

    $default  reduce using rule 94 (switch_case)


State 211

  107 default: DEFAULT . COL body break
  108        | DEFAULT . COL LC body RC break

    COL  shift, and go to state 233


State 212

   97 cases: case cases .

    $default  reduce using rule 97 (cases)


State 213

   96 cases: case default .

    $default  reduce using rule 96 (cases)


State 214

   20 int_id_assign_list: ID EQ . INT
   21                   | ID EQ . int_arith
   22                   | ID EQ . func_call
   23                   | ID EQ . int_id_assign_list
   29 float_id_assign_list: ID EQ . FLOAT
   30                     | ID EQ . float_arith
   31                     | ID EQ . func_call
   32                     | ID EQ . float_id_assign_list

    LP     shift, and go to state 1
    ID     shift, and go to state 234
    INT    shift, and go to state 191
    FLOAT  shift, and go to state 199

    int_id_assign_list    go to state 192
    float_id_assign_list  go to state 200
    int_arith             go to state 193
    int_arith_arg         go to state 18
    float_arith           go to state 201
    float_arith_arg       go to state 20
    func_call             go to state 235


State 215

   75 body: stmt_wo_func .
   76     | stmt_wo_func . body

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    $default  reduce using rule 75 (body)

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 236
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 216

  112 for_loop: FOR LP for_expr RP LC body . RC

    RC  shift, and go to state 237


State 217

  121 for_third: ID EQ . int_id_assign_list
  122          | ID EQ . float_id_assign_list

    ID  shift, and go to state 159

    int_id_assign_list    go to state 238
    float_id_assign_list  go to state 239


State 218

   35 int_arith: int_arith_arg . PLUS int_arith_arg
   36          | int_arith_arg . MINUS int_arith_arg
   37          | int_arith_arg . MULT int_arith_arg
   38          | int_arith_arg . DIV int_arith_arg
   85 expr: int_arith_arg EQ EQ int_arith_arg .

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MULT   shift, and go to state 47
    DIV    shift, and go to state 48

    $default  reduce using rule 85 (expr)


State 219

   44 float_arith: float_arith_arg . PLUS float_arith_arg
   45            | float_arith_arg . MINUS float_arith_arg
   46            | float_arith_arg . MULT float_arith_arg
   47            | float_arith_arg . DIV float_arith_arg
   91 expr: float_arith_arg EQ EQ float_arith_arg .

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MULT   shift, and go to state 52
    DIV    shift, and go to state 53

    $default  reduce using rule 91 (expr)


State 220

  124 while_loop: WHILE LP cond RP LC body . RC

    RC  shift, and go to state 240


State 221

   63 decl_arg: INT_DECL ID .

    $default  reduce using rule 63 (decl_arg)


State 222

   64 decl_arg: FLOAT_DECL ID .

    $default  reduce using rule 64 (decl_arg)


State 223

   66 func_def: VOID ID LP def_arg_list RP LC body . RC

    RC  shift, and go to state 241


State 224

   73 def_arg: INT_DECL ID .

    $default  reduce using rule 73 (def_arg)


State 225

   74 def_arg: FLOAT_DECL ID .

    $default  reduce using rule 74 (def_arg)


State 226

   68 func_def: INT_DECL ID LP def_arg_list RP LC body . RC

    RC  shift, and go to state 242


State 227

   70 func_def: FLOAT_DECL ID LP def_arg_list RP LC body . RC

    RC  shift, and go to state 243


State 228

   95 switch_case: SWITCH LP ID RP LC cases RC .

    $default  reduce using rule 95 (switch_case)


State 229

  100 case: CASE LP INT . RP COL body break
  101     | CASE LP INT . RP COL LC body RC break

    RP  shift, and go to state 244


State 230

  104 case: CASE LP FLOAT . RP COL body break
  105     | CASE LP FLOAT . RP COL LC body RC break

    RP  shift, and go to state 245


State 231

   98 case: CASE INT COL . body break
   99     | CASE INT COL . LC body RC break

    LC          shift, and go to state 246
    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 247
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 232

  102 case: CASE FLOAT COL . body break
  103     | CASE FLOAT COL . LC body RC break

    LC          shift, and go to state 248
    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 249
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 233

  107 default: DEFAULT COL . body break
  108        | DEFAULT COL . LC body RC break

    LC          shift, and go to state 250
    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 251
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 234

   19 int_id_assign_list: ID .
   20                   | ID . EQ INT
   21                   | ID . EQ int_arith
   22                   | ID . EQ func_call
   23                   | ID . EQ int_id_assign_list
   28 float_id_assign_list: ID .
   29                     | ID . EQ FLOAT
   30                     | ID . EQ float_arith
   31                     | ID . EQ func_call
   32                     | ID . EQ float_id_assign_list
   39 int_arith_arg: ID .
   48 float_arith_arg: ID .
   53 func_call: ID . LP call_arg_list RP

    EQ  shift, and go to state 214
    LP  shift, and go to state 37

    PLUS      reduce using rule 39 (int_arith_arg)
    PLUS      [reduce using rule 48 (float_arith_arg)]
    MINUS     reduce using rule 39 (int_arith_arg)
    MINUS     [reduce using rule 48 (float_arith_arg)]
    MULT      reduce using rule 39 (int_arith_arg)
    MULT      [reduce using rule 48 (float_arith_arg)]
    DIV       reduce using rule 39 (int_arith_arg)
    DIV       [reduce using rule 48 (float_arith_arg)]
    COMMA     reduce using rule 19 (int_id_assign_list)
    COMMA     [reduce using rule 28 (float_id_assign_list)]
    SEMI      reduce using rule 19 (int_id_assign_list)
    SEMI      [reduce using rule 28 (float_id_assign_list)]
    RP        reduce using rule 19 (int_id_assign_list)
    RP        [reduce using rule 28 (float_id_assign_list)]
    $default  reduce using rule 39 (int_arith_arg)


State 235

   22 int_id_assign_list: ID EQ func_call .
   31 float_id_assign_list: ID EQ func_call .
   42 int_arith_arg: func_call .
   51 float_arith_arg: func_call .

    PLUS      reduce using rule 42 (int_arith_arg)
    PLUS      [reduce using rule 51 (float_arith_arg)]
    MINUS     reduce using rule 42 (int_arith_arg)
    MINUS     [reduce using rule 51 (float_arith_arg)]
    MULT      reduce using rule 42 (int_arith_arg)
    MULT      [reduce using rule 51 (float_arith_arg)]
    DIV       reduce using rule 42 (int_arith_arg)
    DIV       [reduce using rule 51 (float_arith_arg)]
    COMMA     reduce using rule 22 (int_id_assign_list)
    COMMA     [reduce using rule 31 (float_id_assign_list)]
    SEMI      reduce using rule 22 (int_id_assign_list)
    SEMI      [reduce using rule 31 (float_id_assign_list)]
    RP        reduce using rule 22 (int_id_assign_list)
    RP        [reduce using rule 31 (float_id_assign_list)]
    $default  reduce using rule 42 (int_arith_arg)


State 236

   76 body: stmt_wo_func body .

    $default  reduce using rule 76 (body)


State 237

  112 for_loop: FOR LP for_expr RP LC body RC .

    $default  reduce using rule 112 (for_loop)


State 238

  121 for_third: ID EQ int_id_assign_list .

    $default  reduce using rule 121 (for_third)


State 239

  122 for_third: ID EQ float_id_assign_list .

    $default  reduce using rule 122 (for_third)


State 240

  124 while_loop: WHILE LP cond RP LC body RC .

    $default  reduce using rule 124 (while_loop)


State 241

   66 func_def: VOID ID LP def_arg_list RP LC body RC .

    $default  reduce using rule 66 (func_def)


State 242

   68 func_def: INT_DECL ID LP def_arg_list RP LC body RC .

    $default  reduce using rule 68 (func_def)


State 243

   70 func_def: FLOAT_DECL ID LP def_arg_list RP LC body RC .

    $default  reduce using rule 70 (func_def)


State 244

  100 case: CASE LP INT RP . COL body break
  101     | CASE LP INT RP . COL LC body RC break

    COL  shift, and go to state 252


State 245

  104 case: CASE LP FLOAT RP . COL body break
  105     | CASE LP FLOAT RP . COL LC body RC break

    COL  shift, and go to state 253


State 246

   99 case: CASE INT COL LC . body RC break

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 254
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 247

   98 case: CASE INT COL body . break

    BREAK  shift, and go to state 255

    $default  reduce using rule 109 (break)

    break  go to state 256


State 248

  103 case: CASE FLOAT COL LC . body RC break

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 257
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 249

  102 case: CASE FLOAT COL body . break

    BREAK  shift, and go to state 255

    $default  reduce using rule 109 (break)

    break  go to state 258


State 250

  108 default: DEFAULT COL LC . body RC break

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 259
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 251

  107 default: DEFAULT COL body . break

    BREAK  shift, and go to state 255

    $default  reduce using rule 109 (break)

    break  go to state 260


State 252

  100 case: CASE LP INT RP COL . body break
  101     | CASE LP INT RP COL . LC body RC break

    LC          shift, and go to state 261
    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 262
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 253

  104 case: CASE LP FLOAT RP COL . body break
  105     | CASE LP FLOAT RP COL . LC body RC break

    LC          shift, and go to state 263
    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 264
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 254

   99 case: CASE INT COL LC body . RC break

    RC  shift, and go to state 265


State 255

  110 break: BREAK . SEMI

    SEMI  shift, and go to state 266


State 256

   98 case: CASE INT COL body break .

    $default  reduce using rule 98 (case)


State 257

  103 case: CASE FLOAT COL LC body . RC break

    RC  shift, and go to state 267


State 258

  102 case: CASE FLOAT COL body break .

    $default  reduce using rule 102 (case)


State 259

  108 default: DEFAULT COL LC body . RC break

    RC  shift, and go to state 268


State 260

  107 default: DEFAULT COL body break .

    $default  reduce using rule 107 (default)


State 261

  101 case: CASE LP INT RP COL LC . body RC break

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 269
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 262

  100 case: CASE LP INT RP COL body . break

    BREAK  shift, and go to state 255

    $default  reduce using rule 109 (break)

    break  go to state 270


State 263

  105 case: CASE LP FLOAT RP COL LC . body RC break

    LP          shift, and go to state 1
    INT_DECL    shift, and go to state 70
    FLOAT_DECL  shift, and go to state 71
    ID          shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    SWITCH      shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10

    stmt_wo_func     go to state 215
    var_decl         go to state 15
    arith            go to state 16
    int_arith        go to state 17
    int_arith_arg    go to state 18
    float_arith      go to state 19
    float_arith_arg  go to state 20
    func_call        go to state 21
    body             go to state 271
    switch_case      go to state 24
    for_loop         go to state 25
    while_loop       go to state 26


State 264

  104 case: CASE LP FLOAT RP COL body . break

    BREAK  shift, and go to state 255

    $default  reduce using rule 109 (break)

    break  go to state 272


State 265

   99 case: CASE INT COL LC body RC . break

    BREAK  shift, and go to state 255

    $default  reduce using rule 109 (break)

    break  go to state 273


State 266

  110 break: BREAK SEMI .

    $default  reduce using rule 110 (break)


State 267

  103 case: CASE FLOAT COL LC body RC . break

    BREAK  shift, and go to state 255

    $default  reduce using rule 109 (break)

    break  go to state 274


State 268

  108 default: DEFAULT COL LC body RC . break

    BREAK  shift, and go to state 255

    $default  reduce using rule 109 (break)

    break  go to state 275


State 269

  101 case: CASE LP INT RP COL LC body . RC break

    RC  shift, and go to state 276


State 270

  100 case: CASE LP INT RP COL body break .

    $default  reduce using rule 100 (case)


State 271

  105 case: CASE LP FLOAT RP COL LC body . RC break

    RC  shift, and go to state 277


State 272

  104 case: CASE LP FLOAT RP COL body break .

    $default  reduce using rule 104 (case)


State 273

   99 case: CASE INT COL LC body RC break .

    $default  reduce using rule 99 (case)


State 274

  103 case: CASE FLOAT COL LC body RC break .

    $default  reduce using rule 103 (case)


State 275

  108 default: DEFAULT COL LC body RC break .

    $default  reduce using rule 108 (default)


State 276

  101 case: CASE LP INT RP COL LC body RC . break

    BREAK  shift, and go to state 255

    $default  reduce using rule 109 (break)

    break  go to state 278


State 277

  105 case: CASE LP FLOAT RP COL LC body RC . break

    BREAK  shift, and go to state 255

    $default  reduce using rule 109 (break)

    break  go to state 279


State 278

  101 case: CASE LP INT RP COL LC body RC break .

    $default  reduce using rule 101 (case)


State 279

  105 case: CASE LP FLOAT RP COL LC body RC break .

    $default  reduce using rule 105 (case)
